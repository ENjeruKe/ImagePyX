HISTORY
=======
FEB 2012	Planning the WIM archive classes
16.09.12	WIM archive classes with indexing and self representation
		introduced on the behalf of NTFS/(ex)FAT parser
18.09.12	Reviewing the internals of 7-zip/ImageX made WIMs
		First protoype with creators for each WIM subsection
19.09.12 r.0.01	First prototype can assemble a very simple, uncompressed valid WIM
20.09.12 r.0.02	Appropriate XML Data; can store more files and dirs
21.09.12 r.0.03	Bugs with files and dirs order fixed
		Introduced (XPRESS) compression with MSCompression.dll
22.09.12	Using RtlCompressBuffer from NTDLL (Win 8)
		Many bugs fixed: can handle well thousands of files
23.09.12 r.0.04	halfed SHA-1 calculations
		simpler reference counting
		stores always when comp == uncomp size
		stores uncompressed chunks when cheaper
		uses Python Unicode for scanning dirs
24.09.12 r.0.05 made the input stream w/ temp file (like ImageX)
		testing capabilities
25.09.12 r.0.06 fixed bugs in the InputStream read lengths
		rough mechanism to re-copy the Metadata uncompressed
26.09.12 r.0.07 checked and fixed the problem with last chunk comp >= uncomp
04.10.12 r.0.08 copy buffer decreased to 32K to speedup
		reorganized code in SSWIMMD
		timings
05.10.12 r.0.09 InputStream now correctly detects if the last chunk is uncompressed
		reports duplicates discarded in debug info
06.10.12 r.0.10 working (and faster: 33%) compressor multithreaded version
		slightly improved with a 3rd thread
		additional 15% speedup by reorganizing code in make_fileresources
		rtl_xpress_huff_compress now uses c_int/byref
08.10.12 r.0.11	aborted ctypes variant due too many bugs (fields; str conversion)
		1 thread only w/ no compression (or too many open files exception)
		minor optimizations in OutputStream.__write_comp
		better reports decompressor errors in debugging log
09.10.12 r.0.12	cStringIO instead of str in OutputStream: but no speedup
		takes SHA-1 AOT trying to save compressor work, at a cost of reading input twice
		(20% faster on a fresh XP installation -dllcache-)
11.10.12 r.0.13	integrity table creation & verification
13.10.12 r.0.14 can append new images
		can test multiple images in a WIM
		ElementTree to manage XmlData
		rough cmd line
		option to exclude files/folders from capture
16.10.12 r.0.15	can split WIM
		cmd line unified in SSWIMM main module
		can update images
		can list image contents
		sets correct dwFlags in WIM header
22.10.12 r.0.16	fixed a bug with nesting excluded directory
		added description XML field
		better split algorithm to reach optimal unit fit
		access to images by name
23.10.12 r.0.17	update correctly decreases dwRefCount for discarded files
		update merges again common file resources
		correctly extends/updates offset table when appending/updating an identical image
		always updates TOTALBYTES field in XmlData
		can delete images
		keeps IMAGE entries sorted by INDEX in XmlData (prevents 7-zip warnings)
		can read exclusion list from file
24.10.12 r.0.20	reorganized code in SSWIMM package with ImagePyX driver :)
17.01.13 r.0.21 added progress indicator (% done and time)
22.01.13 r.0.22 can extract images
		unified progress indicator
		uses NTDLL codecs when available (Windows 8)
		fixed RTL Xpress Huffman decompressor
		can exclude files during extraction
		skips items not belonging to the selected image
		minimized RTL codec workspace reallocations
		restores times/attributes (except creation time) on extracted files
26.01.13 r.0.23 can export an image to a new WIM
		unified code for Metadata access and timing reports
		fixed a bug in dwRefCount when updating/deleting an image
		changed some command names in ImagePyX to resemble ImageX
		beautified info output (thanks to minidom)
		replaced dict() with OrderedDict() to speedup some operations
		correctly decreases dwImageCount when deleting an Image
05.02.13 r.0.24 can handle security attributes
		fixed QWORD alignment of Security Data block
		can restore all time and security descriptors on Windows
		correctly restores duplicated file resources by copying them
		can record short 8+3 file names (Windows)
		correctly lists each duplicated file resource
		can export one or all images to a new or old WIM
12.02.13 r.0.25 can (re)store alternate data streams (Windows)
		can (re)store hard links to files (Windows)
		can (re)store junctions and symbolic links (Windows)
16.02.13 r.0.26 use compression code from wimlib
                full LZX support via wimlib
		can calculate bytes in hard links
07.04.13 r.0.27 new generic, multi-chunk based MT compressor and decompressor
		support for 64-bit chunks in resources
		fixed a bug with ADS and FAT32 FS
		programmable threshold filter to abort compression when gain is very low
		can get SeSecurityPrivilege/SeRestorePrivilege to handle SACL in SD (Windows)
  


TODO
====
- discover how to improve applying times
- apply times and perms to root target, too!
- acquire all required privileges in Windows
- export with resource recompression
- handle not accessible files (i.e. when Admin rights are required)
- foreign SDs: have they to be restored?
- test it under Linux
- merge/read from multiple SWM
- change image name/description in XML data with --info
- optimization/cleanup of unused resources in an updated WIM
- resolve conflict between images with the same name?
- set FLAG_HEADER_RESOURCE_ONLY, FLAG_HEADER_METADATA_ONLY in WIM header
- investigate around RESHDR_FLAG_FREE
- compare valid WIM size with xmldata?
